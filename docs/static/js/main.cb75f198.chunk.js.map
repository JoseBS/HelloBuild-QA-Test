{"version":3,"sources":["components/Article/Article.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Article","photo","role","onClick","url","links","html","window","open","src","urls","regular","alt","alt_description","description","join","App","useState","loadTime","photos","data","setData","handleSubmit","values","a","startTime","Date","fetch","search","headers","Authorization","res","json","endTime","results","className","initialValues","onSubmit","name","placeholder","length","style","height","map","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAeeA,EAXC,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACjB,OACE,0BAASC,KAAK,WAAWC,QAAS,kBALxBC,EAKmCH,EAAMI,MAAMC,UAJ3DC,OAAOC,KAAKJ,GADD,IAACA,GAKV,UACE,qBAAKK,IAAKR,EAAMS,KAAKC,QAASC,IAAKX,EAAMY,kBACzC,4BACG,CAACZ,EAAMa,YAAab,EAAMY,iBAAiBE,KAAK,aC0C1CC,EA5CH,WAAO,IAAD,UACQC,mBAAS,CAAEC,SAAU,EAAGC,OAAQ,KADxC,mBACTC,EADS,KACHC,EADG,KAEVC,EAAY,uCAAG,WAAMC,GAAN,qBAAAC,EAAA,6DACbC,EAAY,IAAIC,KADH,SAEDC,MAAM,4DAAD,OAA6DJ,EAAOK,QAAU,CACnGC,QAAS,CACPC,cAAe,2DAJA,cAEbC,EAFa,gBAOAA,EAAIC,OAPJ,OAObZ,EAPa,OAQba,EAAU,IAAIP,KAEpBL,EAAQ,CAAEH,SADQe,EAAUR,EACGN,OAAQC,EAAKc,UAVzB,4CAAH,sDAYlB,OACE,sBAAKC,UAAU,MAAf,UACE,mCACE,cAAC,IAAD,CACEC,cAAe,CAAER,OAAQ,IACzBS,SAAUf,EAFZ,SAIE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOgB,KAAK,SAASC,YAAY,gBAGrC,qDACiBnB,EAAKF,SADtB,MAEE,uCAFF,wBAGoBE,EAAKD,OAAOqB,OAHhC,gBAMF,sBAAKL,UAAU,YAAYM,MAAO,CAAEC,OAA+B,IAAvBtB,EAAKD,OAAOqB,QAAgB,QAAxE,WACO,OAAJpB,QAAI,IAAJA,GAAA,UAAAA,EAAMD,cAAN,eAAcqB,QAAS,GACtB,qBAAKL,UAAU,SAASjC,KAAK,OAA7B,oBACG,EAAAkB,EAAKD,QAAOwB,WADf,aACG,UAAkB,SAAA1C,GAAK,OACtB,cAAC,EAAD,CAASA,MAAOA,GAAYA,EAAM2C,SAGb,KAArB,OAAJxB,QAAI,IAAJA,GAAA,UAAAA,EAAMD,cAAN,eAAcqB,SAAkC,IAAlBpB,EAAKF,UAAmB,qBAAKiB,UAAU,YAAf,qCCjCjDU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cb75f198.chunk.js","sourcesContent":["import './Article.css'\nconst open = (url) => {\n  window.open(url)\n}\nconst Article = ({ photo }) => {\n  return (\n    <article role='listitem' onClick={() => open(photo.links.html)}>\n      <img src={photo.urls.regular} alt={photo.alt_description} />\n      <p>\n        {[photo.description, photo.alt_description].join(' - ')}\n      </p>\n    </article>\n  )\n}\n\nexport default Article\n","import { useState } from 'react'\nimport { Formik, Form, Field } from 'formik'\n\nimport './App.css'\n\nimport Article from './components/Article/Article'\n\nconst App = () => {\n  const [data, setData] = useState({ loadTime: 0, photos: [] })\n  const handleSubmit = async values => {\n    const startTime = new Date()\n    const res = await fetch(`https://api.unsplash.com/search/photos?per_page=10&query=${values.search}`, {\n      headers: {\n        Authorization: 'Client-ID bm8Ew4tcVfCLMzpfQwbDon8NtBEmB6ok2SDx9ebOjMs'\n      }\n    })\n    const data = await res.json()\n    const endTime = new Date()\n    const finalTime = endTime - startTime\n    setData({ loadTime: finalTime, photos: data.results })\n  }\n  return (\n    <div className='app'>\n      <header>\n        <Formik\n          initialValues={{ search: '' }}\n          onSubmit={handleSubmit}\n        >\n          <Form>\n            <Field name='search' placeholder='Find...' />\n          </Form>\n        </Formik>\n        <div>\n          {`Load time: ${data.loadTime}ms`}\n          <span> - </span>\n          {`Result count: ${data.photos.length} items`}\n        </div>\n      </header>\n      <div className='container' style={{ height: data.photos.length === 0 && '100%' }}>\n        {data?.photos?.length > 0 &&\n          <div className='center' role='list'>\n            {data.photos.map?.(photo =>\n              <Article photo={photo} key={photo.id} />\n            )}\n          </div>}\n        {(data?.photos?.length === 0 && data.loadTime !== 0) && <div className='noResults'>No results found</div>}\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App.jsx'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}